apply plugin: 'com.android.application'
if (enable_plugin_kotlin) {
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'
}

ext.version_setup_minSdk = 14

android {
    buildToolsVersion version_setup_buildTools
    compileSdkVersion version_setup_compileSdk
    flavorDimensions "default"

    defaultConfig {
        minSdkVersion version_setup_minSdk
        targetSdkVersion version_setup_targetSdk
        buildConfigField "boolean", "IS_TEST_BUILD", "false"
        buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
        buildConfigField "String[]", "APPLICATION_LANGUAGES", "${getUsedAndroidLanguages()}"
        buildConfigField "String", "GITHASH", "\"${getGitHash()}\""

        applicationId "net.gsantner.markor"
        versionName "0.3.1"
        versionCode 15
    }

    productFlavors {
        flavorDefault {
        }
        flavorGplay {
            buildConfigField "boolean", "IS_GPLAY_BUILD", "true"
        }
        flavorTest {
            applicationId "net.gsantner.markor_test"
            versionCode = Integer.parseInt(new Date().format('yyMMdd'))
            versionName = new Date().format('yyMMdd')
            buildConfigField "boolean", "IS_TEST_BUILD", "true"
        }
    }

    sourceSets {
        if (enable_plugin_kotlin) {
            main.java.srcDirs += 'src/main/kotlin'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'com.android.support') {
                    if (details.requested.name != 'multidex' && details.requested.name != 'multidex-instrumentation') {
                        details.useVersion "${version_library_appcompat}"
                    }
                }
            }
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }
}

dependencies {
    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.8.0'

    // Android standard libs
    implementation "com.android.support:appcompat-v7:${version_library_appcompat}"
    implementation "com.android.support:design:${version_library_appcompat}"
    implementation "com.android.support:support-v4:${version_library_appcompat}"
    implementation "com.android.support:recyclerview-v7:${version_library_appcompat}"
    implementation "com.android.support:palette-v7:${version_library_appcompat}"
    implementation "com.android.support:preference-v7:${version_library_appcompat}"
    implementation "com.android.support:preference-v14:${version_library_appcompat}"

    // UI libs
    implementation 'com.mobsandgeeks:adapter-kit:0.5.3'
    implementation "com.atlassian.commonmark:commonmark:${version_library_commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:${version_library_commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-gfm-tables:${version_library_commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-autolink:${version_library_commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-ins:${version_library_commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-yaml-front-matter:${version_library_commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-heading-anchor:${version_library_commonmark}"

    implementation 'com.pixplicity.generate:library:1.1.8'

    // Tool libraries
    implementation "com.jakewharton:butterknife:${version_library_butterknife}"
    implementation 'commons-io:commons-io:2.5'
    if (enable_plugin_kotlin) {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$version_plugin_kotlin"
    }

    // Processors
    def anpros = ["com.jakewharton:butterknife-compiler:${version_library_butterknife}"]
    for (anpro in anpros) {
        if (enable_plugin_kotlin) {
            kapt anpro
        } else {
            annotationProcessor anpro
        }
    }
}
