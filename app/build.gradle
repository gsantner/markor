/*#######################################################
 *
 *   Maintained 2017-2023 by Gregor Santner <gsantner AT mailbox DOT org>
 *
 *   License of this file: Apache 2.0
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
#########################################################*/
apply plugin: 'com.android.application'
if (enable_plugin_kotlin) {
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'
}

rootProject.ext.version_minSdk = 16

// https://github.com/vsch/flexmark-java/releases
ext.version_library_flexmark = "0.42.14"

android {
    buildToolsVersion rootProject.ext.version_buildTools
    compileSdkVersion rootProject.ext.version_compileSdk

    defaultConfig {
        resValue "string", "manifest_package_id", "net.gsantner.markor"
        applicationId "net.gsantner.markor"
        versionName "2.11.1"
        versionCode 148

        multiDexEnabled true
        minSdkVersion rootProject.ext.version_minSdk
        targetSdkVersion rootProject.ext.version_compileSdk
        buildConfigField "boolean", "IS_TEST_BUILD", "false"
        buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
        buildConfigField "String[]", "DETECTED_ANDROID_LOCALES", "${findUsedAndroidLocales()}"
        buildConfigField "String", "BUILD_DATE", "\"${getBuildDate()}\""
        buildConfigField "String", "GITHASH", "\"${getGitHash()}\""
        buildConfigField "String", "GITMSG", "\"${getGitLastCommitMessage()}\""
        setProperty("archivesBaseName", applicationId + "-v" + versionCode + "-" + versionName)
    }

    flavorDimensions "default"
    productFlavors {
        flavorAtest {
            applicationId "net.gsantner.markor_test"
            versionCode = Integer.parseInt(new Date().format('yyMMdd'))
            versionName = defaultConfig.versionName + "-" + new Date().format('HHmm')
            buildConfigField "boolean", "IS_TEST_BUILD", "true"
        }
        flavorDefault {
        }
        flavorGplay {
            buildConfigField "boolean", "IS_GPLAY_BUILD", "true"
        }
    }

    sourceSets {
        main { assets.srcDirs = ['src/main/assets'] }
        if (enable_plugin_kotlin) {
            main.java.srcDirs += 'src/main/kotlin'
        }
        main.java.srcDirs += 'thirdparty/java'
        main.res.srcDirs += 'thirdparty/res'
        main.assets.srcDirs += 'thirdparty/assets'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE-LGPL-2.1.txt'
        exclude 'META-INF/LICENSE-LGPL-3.txt'
        exclude 'META-INF/LICENSE-W3C-TEST'
    }

    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'MissingTranslation', 'InvalidPackage', 'ObsoleteLintCustomCheck', 'DefaultLocale', 'UnusedAttribute', 'VectorRaster', 'InflateParams', 'IconLocation', 'UnusedResources', 'TypographyEllipsis'
        abortOnError false
    }
}

dependencies {
    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.assertj:assertj-core:3.13.1'

    // Android standard libs
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.browser:browser:1.4.0'

    // Markdown convertor (Flexmark)
    implementation "com.vladsch.flexmark:flexmark:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-util:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-emoji:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-gfm-tasklist:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-superscript:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-autolink:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-toc:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-tables:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-jekyll-front-matter:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-jekyll-tag:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-anchorlink:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-gfm-strikethrough:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-yaml-front-matter:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-footnotes:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-gitlab:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-typographic:${version_library_flexmark}"
    implementation "com.vladsch.flexmark:flexmark-ext-admonition:${version_library_flexmark}"

    // csv support
    // https://opencsv.sourceforge.net/licenses.html License: Apache2
    // opencsv 3.10 was the last java-6 version
    // opencsv 5.7.1' for java-8 may have dependencies that are not backward compatibility with android-4.1
    //noinspection GradleDependency
    implementation('com.opencsv:opencsv:3.10') {
        // do not get transitive 'commons-beanutils:commons-beanutils as the opencsv bean <-> csv feature is not used
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }



    // UI libs
    implementation 'com.pixplicity.generate:library:1.1.8'
    implementation 'com.github.AppIntro:AppIntro:6.2.0'
    implementation 'com.kailashdabhi:om-recorder:1.1.5'
    implementation 'com.github.mertakdut:EpubParser:1.0.95'
    implementation project(':app:thirdparty-lib-src:QuadFlask-colorpicker')

    // Tool libraries
    //noinspection AnnotationProcessorOnCompilePath
    implementation 'commons-io:commons-io:2.7'
    if (enable_plugin_kotlin) {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${version_plugin_kotlin}"
    }

    // Processors
    def anpros = []
    for (anpro in anpros) {
        if (enable_plugin_kotlin) {
            kapt anpro
        } else {
            annotationProcessor anpro
        }
    }
}
